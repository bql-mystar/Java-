案例：文件下载器
服务器参考代码如下：

from socket import *
import sys

def get_file_content(file_name):
	'''获取文件的内容'''
	try:
		with open(fole_name,'rb') as f:
			cpntent = f.read()
		return content
	except:
		print('没有下载文件：%s' % file_name)

def main():
	if len(sys.argv) != 2:
		pr
int('请按照如下方式运行：python3 xxx.py 7890')
		return
	else：
		# 运行方式为python3 xxx.py 7890
		port = int(sys.argv[1])

	# 创建socket套接字
	tcp_server_socket = socket(AF_INET,SOCK_STREAM)
	# 本地信息
	address = ('',port)
	# 绑定本地信息
	tcp_server_socket.bind(address)
	# 将主动套接字变为被动套接字
	tcp_server_socket.listen(128)

	while True:
		# 等待客户端连接，即为这个客户端发送文件
		client_socket,clientAddr = tcp_server_socket.accept()
		# 接收对方发送过来的数据
		recv_data = client_socket.recv(1024)	#接收1024字节
		file_name = recv_data.decode('utf-8')
		print('对方请求下载的文件名为：%s' % file_name)
		file_content = get_file_content(file_name)
		# 发送文件的数据给客户端
		# 因为获取打开文件时是以rb方式打开，所以file_content中的数据已经是二进制的格式，因此不需要e
		if file_content:
			client_socket.send(file_content)
		# 关闭套接字
		client_socket.close()

	# 关闭监听套接字
	tcp_server_socket.close()

if __name__ =='__main__':
	main()






客户端参考代码如下

from socket import *

def main():
	# 创建socket套接字
	tcp_client_socket = socket(AF_INEF,SOCK_STREAM)
	# 目的信息
	server_ip = input('请输入服务器的ip：')
	server_port = int(input('请输入服务器port：'))
	# 链接服务器
	tcp_client_socket .connect((server_ip,server_port))
	# 输入需要下载的文件名
	file_name = input('请输入要下载的文件名：')
	# 发送文件下载请求
	tcp_client_socket.send(file_name.encode('utf-8'))
	# 接收对方发送过来的数据，最大接收1024字节（1k）
	recv_data = tcp_client_socket.recv(1024)
	# print('接收的数据为：',recv_data.decode('utf-8'))
	# 如果接收到数据再创建文件，否则不创建
	if recv_data:
		with open('{接收}'+file_name,'wb') as f:
			f.write(recv_data)
	# 关闭套接字
	tcp_client_socket.close()

if __name__ =='__main__':
	main() 



tcp注意点
1、tcp服务器一般情况下都需要绑定，否则客户端找不到这个服务器
2、tco客户端一般不绑定，因为是主动链接服务器，所以只要确定好服务器的ip，port等信息就好，本地客户端可以随机
3、tcp服务器中通过listen可以将socket创建出来的主动套接字变为被动的，这是做tcp服务器时必须要做的
4、当客户端需要链接服务器时，就需要使用connect进行链接，udp是不需要链接的而是直接发送的，但是tcp必须先链接，只有链接成功才能通信
5、当一个tcp客户端连接服务器时，服务器会有一个新的套接字，这个套接字用来标记客户端名，单独为这个客户端服务
6、listen后的套接字是被动套接字，用来接收新的客户端的链接请求的，而accept返回的新套接字是标记这个新客户端的
7、关闭listen后的套接字意味着被动套接字关闭了，会导致新的客户端不能够链接服务器，但是之前已经链接成功的客户端正常通信
8、关闭accept返回的套接字意味着这个客户端已经服务完毕
9、当客户端的套接字调用close后，服务器会recv解堵塞，并且返回的长度为0，因此服务器可以通过返回数据长度来区别客户端是否已经下线



注意：在同一个网络中（即同一个网段）通信交流时，需要有ip和port
           而在互联网中（以qq为例，两个qq，分别为qq1和qq2）qq1登陆链接服务器（服务器ip和port固定）时，服务器可以获取qq1的ip和port，qq2也是同理
	当qq1发消息给qq2时，先将消息上传给服务器，服务器起到转发的作用，然后服务器根据qq号找到qq2对应的ip和端口，然后将消息发送给qq2

qq不绑定端口的好处：可以实现qq多开，如果绑定了端口，那么只能登陆一个qq


腾讯服务器保存了用户的聊天记录至少六个月（互联网规定，具体多少，不知道），手机上的清空聊天记录只是清空手机上的聊天记录







以下为自己理解，不保证正确，更正确的理解去度娘
何为堵塞：即accept在等待客户端链接时，程序会停止在那里
如何解堵塞：1、客户端会发送链接信息过来	2、客户端发送信息长度为0（即客户端套接字调用了close）












		

