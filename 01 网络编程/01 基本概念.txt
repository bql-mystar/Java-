使用网络的目的
就是为了联通多方然后进行通信用的，即把数据从一方传递给另一方
为了让在不同的电脑上运行的软件之间能够互相的传递数据，就需要借助网络的功能

所谓的网络编程就是：让在不同的电脑上的软件能够进行数据传递，即进程之间的通信

ip地址目的：用来标记网络上的一台电脑

dest_ip:目的ip
src_ip:源ip
dest_port:目标端口
src_port:源端口 
content：内容 

端口就好比一个房子的门，是出入这间房子的必经之路
如果一个程序要收发网络数据，那么就需要有这样的端口
在Linux系统中，端口可以有65536（2的16次方）之多
既然有这么多，操作系统为了统一管理，所以进行了编号，这就是端口号

端口号
端口是通过端口号来标记的，端口号只有整数，范围从0~65534
注意：端口数不一样的*nix系统不一样，还可以手动修改

知名端口
知名端口是众所周知的端口号，范围从0~1023
80端口分配给HTTP服务
21端口分配给FTP服务
可以理解为：一些常用的功能使用的号码是估计的，好比 电话号码 110、10086、10010一样
小于102称为知名端口（不能随便用）
大于102可以随便用
一般情况下，如果一个程序需要使用知名端口，需要有root权限


动态端口
动态端口的范围从1024到65535
之所以成为动态端口，是应为它一般不固定分配某种服务，而是动态分配
动态分配是指当一个程序或者应用程序需要网络通信时，它向主机申请一个端口，主机从可用的端口中分配一个供它使用
当这个程序关闭时，同时也就释放了所占用的端口号



创建socket
在python中使用socket模块的函数socket就可以完成：
import socket
socket.socket(AddressFamily,Type)

说明：
函数socket.socket创建一个socket，该函数带有以下两个参数
	AddressFamily：可以选择AF_INET(用于Internet进程间通信)或者AF_UNIX（用于同一台机器进程间通信），实际工作中常用AF_INET
	Type：套接字类型，可以是SOCK_STREAM(流式套接字，主要用于TCP协议)或者SOCK_DGRAM（数据报套接字，主要用于UDP协议）


创建一个tcp socket（tcp套接字）
import socket
#创建tcp的套接字
s = socket.socket.socket(socket.AF_INET,socket.SOCK_STEAM)
#...这里是使用套接字的功能（省略）...
#不用的时候，关闭套接字
s.close()


创建一个udp socket（udp套接字）
import socket
#创建udp的套接字
s = socket.socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
#...这里是使用套接字的功能（省略）...
#不用的时候，关闭套接字
s.close()

说明：
套接字使用 与 文件的使用操作流程很类似
	1、创建套接字
	2、使用套接字收/发数据
	3、关闭套接字








