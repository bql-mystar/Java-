命名规则：字母、数字、下划线组合，其中不可以以数字开头

在python中每个独立的文件都是一个独立的模块

用import 模块名 as 模块别名   时，模块别名应该符合大驼峰命名法

用from 模块名 import 工具名   导入模块时，如果两个模块，存在同名的函数，那么  后导入模块的函数  会覆盖掉先导入的函数
解决发法：可以使用取别名的方法来解决问题，格式：from 模块名 import 工具名 as 模块别名

用from 模块名 import * 来导入所有模块时，不推荐使用
因为函数重名并没有任何的提示，出现问题不好排查

python中每一个模块都有一个内置属性__file__可以查看模块和完整路径

开发原则------每一个文件都应该是可以被导入的
	一个独立的python文件就是一个模块
	在导入文件时，文件中没有任何缩进的代码都会被执行一遍
导入模块中，直接执行的代码不是向外界提供的工具


__name__属性可以做到，测试模块的代码只在测试情况下被运行，而被导入时不会被执行

__name__是python的一个内置属性，记录着一个字符串
如果是被其他文件导入的，__name__就是模块名
如果是当前执行的程序，__name__是__main__

所以在测试模块中加入  if __name__=='__main__':
则在该行一下的代码在本文件可以被执行，而别的文件导入时，不会被执行（测试模块会执行）。


包是一个包含多个模块的特殊目录
目录下有一个特殊的文件__init__.py
包含的命名方式和变量名一致，小写字母+__
要在外界使用包中的模块，需要在__init__.py  中指定对外界提供的模块列表
格式为 from . import 文件   （其中的.表示当前目录）
例子：   from . import send_message

好处：
使用  import 包名   可以一次性导入包中所有的模块
 

发布模块（科普）

制作发布压缩包步骤
1）创建setup.py
	格式固定
		from distutils.core import setup

		setup(name='hm_message'，	#包名
			version=‘1.0’，	#版本
			description=‘ 发送和接收消息模块'，   #描述信息
			long_description='完整的发送和接收信息模块'，	#完整描述信息
			author='itheima',	#作者
			author_email='.......@qq.com',	    #作者邮箱
			url='www.itheima.com',   #主页（可以与个人取得联系的主页都行）
			py_modules=[’hm_message.send_message‘,'hm_message.receive_message']）  #包中所包含的模块
			
2）构建模块（在python终端中完成）
	$ python3 setup.py build
3）生成发布压缩包（在python终端中完成）
	$ python3 setup.py sdist


安装模块
1）解压（不同操作系统解压方式不同）
2）sudo python3 setup.py install

卸载
1）直接找到相应的目录，并将其删除就行




